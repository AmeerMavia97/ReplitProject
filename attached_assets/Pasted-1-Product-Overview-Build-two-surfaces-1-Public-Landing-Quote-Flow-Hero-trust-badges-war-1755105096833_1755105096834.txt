1) Product Overview

Build two surfaces:
	1.	Public Landing & Quote Flow

	•	Hero, trust badges, warranty tiers, FAQs, reviews, compliance footer.
	•	Quote Form (multi-step, mobile-first):
	•	Step 1 — Vehicle: Year, Make, Model, Trim, Odometer, VIN (optional), Usage (personal/commercial).
	•	Step 2 — Owner: First Name, Last Name, Email, Phone (E.164), ZIP, State.
	•	Step 3 — Coverage Preferences: Deductible, Plan type (Powertrain/Gold/Platinum), Monthly vs paid-in-full, Add-ons (rental, roadside, high-tech, EV battery).
	•	Consent checkboxes: TCPA/Do-Not-Call, privacy policy, terms. Disable CTA until accepted.
	•	Instant Estimate: Use a simple pricing engine (config-driven) that computes MSRP + discounts based on vehicle age/miles/ZIP + plan + deductible. Show 2–3 plan options with monthly & total, “Lock my quote” CTA.
	•	Lead capture: Persist each step (optimistic save) and fire GTM events. If user abandons, store partial lead.

	2.	Back-Office CRM

	•	Dashboards: Today’s leads, SLA timers, agent leaderboard, pipeline by stage, conversion funnel, revenue.
	•	Lead Management (Kanban + table): New → Contacted → Qualified → Quoted → Underwriting → eSign → Funded → Lost. Bulk actions, assignment, notes, tasks, reminders.
	•	Policies: Store bound policies with documents, payment schedule, charge history, cancellations, refunds.
	•	Underwriting Queue: VIN decode, vehicle flags, odometer plausibility, required docs checklist (photos, registration).
	•	Calls & Messaging: Log calls, outcomes, schedule follow-ups. Twilio SMS/WhatsApp for templated messages and two-way threads (save to timeline).
	•	E-Signature: Generate agreements as PDFs from templates (Handlebars), send via embedded DocuSign/HelloSign (mock adapter acceptable). Store signed files.
	•	Payments: Stripe (setup intent, recurring, webhooks). Support down payment + monthly.
	•	Partner Portal: Partners can submit leads via form or API key; view status, commissions, 1099 export.
	•	Reports & Exports: CSV/XLSX for leads, policies, commissions; filters + saved views.

2) Information Architecture & Routes
	•	/ Landing
	•	/quote Multi-step quote flow
	•	/quote/estimate Pricing/results
	•	/legal/privacy, /legal/terms, /legal/tcpa
	•	/login, /register, /reset
	•	/app (authenticated)
	•	/app/leads (table + Kanban + map)
	•	/app/leads/[id] (profile, timeline, quotes, documents, messages)
	•	/app/quotes/[id] (compare plans, send proposal, eSign status)
	•	/app/policies/[id] (coverage, payments, documents)
	•	/app/underwriting
	•	/app/reports
	•	/app/partners + /app/partners/[id]
	•	/app/settings (users, roles, pipelines, pricing rules, message templates, webhooks, integrations)

3) Data Model (Prisma)

Create normalized tables with indexes and audit fields:
	•	User(id, name, email, phone, role, status, createdAt, updatedAt)
	•	Partner(id, name, contactEmail, apiKey, payoutPct, address…)
	•	Lead(id, partnerId?, assignedToId?, firstName, lastName, email, phone, zip, state, consentTCPA:boolean, source, utm fields, stage, score:int, createdAt…)
	•	Vehicle(id, leadId, year, make, model, trim, vin?, odometer:int, usage, ev:boolean)
	•	Quote(id, leadId, plan:enum[Powertrain,Gold,Platinum], deductible:int, termMonths:int, priceTotal:int, priceMonthly:int, fees:int, taxes:int, status:enum[Draft,Sent,Accepted,Rejected], version:int, breakdown:json)
	•	Policy(id, quoteId, policyNumber, startDate, endDate, status:enum[Active,Pending,Canceled,Expired], documents[])
	•	Payment(id, policyId, stripeCustomerId, stripeSubId?, amount:int, currency, status, dueDate, paidAt?)
	•	Task(id, leadId, assignedToId, type, dueAt, completedAt?)
	•	Note(id, leadId, userId, body, pinned:boolean)
	•	Message(id, leadId, direction:enum[in,out], channel:enum[sms,email,whatsapp], to, from, body, status, providerId, error?)
	•	Document(id, ownerType:enum[lead,policy], ownerId, kind, url, signed:boolean)
	•	WebhookEvent(id, provider, type, payload:json, processedAt?)
	•	PricingRule(id, name, conditions:json, formula:json, active:boolean)  // for no-code pricing edits
	•	AuditLog(id, actorId, entity, entityId, action, changes:json, ip, createdAt)

Add compound indexes for (Lead.email), (Lead.phone), (Vehicle.vin), (Quote.leadId+status), etc.

4) Core Features & Logic
	•	Pricing Engine: Pure TypeScript module. Inputs: year, miles, plan, state, deductible, ZIP risk, partner markup. Output: line items, monthly/total, disclaimers. Read from PricingRule table (conditions like vehicle_age between ranges, odometer tiers, state surcharges).
	•	VIN Decode: Adapter pattern; implement mock + plug-in for NHTSA or DataOne. Cache results.
	•	Assignment & Routing: Round-robin or rules-based (state, value, partner). Reassign manually.
	•	Lead Timeline: Unified chronological view (notes, tasks, SMS, emails, quote updates, webhooks).
	•	Consent & Compliance: Persist TCPA timestamp, IP, user agent, consent text snapshot. All outbound SMS must verify consent flag.
	•	Abandon Cart/Quote: Background job watches stale leads; send nudge SMS/email via templates.
	•	Documents: Generate Quote PDF + Policy Summary from HTML templates. Store to S3. Watermark drafts.
	•	Role Permissions:
	•	Agent: CRUD leads they own, create quotes, send messages.
	•	Manager: assign, view all, reports.
	•	Admin: all + pricing rules + user mgmt.
	•	Partner: only their leads + commissions.

5) Integrations
	•	Twilio for SMS/WhatsApp (webhooks for delivery + inbound; thread UI with typing indicator).
	•	Stripe for payments (setup intents, subscriptions, invoice webhooks, dunning emails).
	•	DocuSign/HelloSign for e-sign (template IDs configurable in Settings).
	•	GA4 + GTM events for: step_viewed, lead_created, quote_generated, quote_sent, esign_completed, payment_succeeded. Map user properties where allowed.

6) Frontend UX Requirements
	•	Landing Page Sections: hero with “Get My Free Quote”, how it works (3 steps), plan comparison, included benefits (roadside, rental, nationwide service), reviews, FAQs (accordion), logos, CTA banner, compliance/legal links.
	•	Quote UI: clean multi-step with progress bar; VIN optional; real-time validation; masked inputs; load-as-you-type Make/Model; show “Why we ask” tooltips; accessible keyboard flow; mobile sticky CTA.
	•	Estimate Page: plan cards (Powertrain/Gold/Platinum), toggle monthly / total, select deductible, show “What’s covered” modal, CTA buttons: Save my quote, Talk to an agent, Proceed to e-Sign (if ready).
	•	CRM UI:
	•	Leads table with server-side filtering, column chooser, saved views.
	•	Kanban board with drag-and-drop stages.
	•	Lead profile with left sidebar (contact/vehicle), main timeline, right drawer (tasks, next steps).
	•	Composer for SMS/email with templates, variables, attachments.
	•	Reports with charts (Recharts) and CSV export.

7) Security, Privacy, and Reliability
	•	Enforce HTTPS, CSRF, rate limiting (per IP & per phone/email), helmet, input validation everywhere.
	•	Encrypt secrets, signed URLs for documents, S3 private buckets.
	•	PII access logging to AuditLog.
	•	GDPR/CCPA pages and data-deletion flow.
	•	Backups: daily DB snapshot + object storage lifecycle rules.
	•	Feature flags for risky features.

8) Seed & Demo
	•	Provide seed script that creates: 3 agents, 1 manager, 1 admin, 2 partners; 50 mixed leads with vehicles; sample quotes; 5 policies; some messages and tasks.
	•	Include demo credentials and a “Reset Demo Data” script.

9) Docs & Deliverables
	•	README with local setup (Docker), env vars, migration steps, seeding, and running dev/worker.
	•	/docs with:
	•	Architecture diagram
	•	ERD
	•	API contract (OpenAPI.yaml) for public endpoints (partner lead submit, webhook callbacks)
	•	Pricing rule JSON examples and how to edit
	•	Analytics event spec (names, params)
	•	Deployment checklist
	•	Provide Postman collection for all API routes and example payloads.
	•	Provide Cypress/Playwright tests for quote happy path and CRM lead assignment.

10) API Endpoints (examples)
	•	POST /api/public/leads (partner submits lead — requires x-api-key)
	•	POST /api/quote/estimate (calculate pricing)
	•	POST /api/quote/:id/send (send proposal via email/SMS)
	•	POST /api/esign/create (start e-signature)
	•	POST /api/webhooks/stripe
	•	POST /api/webhooks/twilio
	•	POST /api/webhooks/esign
	•	GET /api/leads?filters=… (server-side filtering & pagination)
	•	PATCH /api/leads/:id (update stage/assignee/fields)

Return consistent JSON with data, error, and pagination meta.

11) Acceptance Criteria
	•	A visitor can complete the multi-step quote form, see real-time estimates, and submit as a lead; all analytics fire; TCPA recorded.
	•	In CRM, an Agent can see their assigned leads, send a templated SMS, create and send a quote, trigger e-sign, and mark a policy as Active after Stripe payment succeeds.
	•	Partner can create a lead with API key and view status/commission in portal.
	•	Pricing rules editable without code via JSON in the Settings UI; changes reflected immediately.
	•	All tests pass; app builds and runs with docker-compose; seed data loads; admin login works.

12) Copy & Legal (starter)
	•	TCPA consent text (sample): “By clicking Continue, you agree to be contacted by phone, SMS, or email regarding your auto warranty options. Consent is not a condition of purchase. Msg & data rates may apply.”
	•	CTA buttons: “Get My Free Quote”, “See Plans”, “Lock My Price”.
	•	Disclaimers: “Coverage varies by plan and vehicle. Waiting period and exclusions may apply.”